name: Build e Deploy no Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: log-agent-backend
  DOCKER_HUB_REPO: ${{ secrets.DOCKER_HUB_USERNAME }}/log-agent-backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build da imagem Docker
        run: docker build --no-cache -t $DOCKER_HUB_REPO:latest .

      - name: Push da imagem para o Docker Hub
        run: docker push $DOCKER_HUB_REPO:latest

      - name: Enviar logs (build) para Fluent Bit
        if: always()
        env:
          FLUENT_BIT_URL: ${{ secrets.FLUENT_BIT_URL }}
          FLUENT_BIT_AUTH_BA: ${{ secrets.FLUENT_BIT_AUTH_BA }}
        run: |
          REPO="${GITHUB_REPOSITORY}"
          WORKFLOW="${GITHUB_WORKFLOW}"
          JOB="${GITHUB_JOB}"
          BRANCH="${GITHUB_REF_NAME}"
          SHA="${GITHUB_SHA}"
          RUN_ID="${GITHUB_RUN_ID}"
          STATUS="${{ job.status }}"
          TS="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          TIPO_ERRO=$( [ "$STATUS" = "failure" ] && echo "BUILD" || echo "INFO" )
          BASE="${REPO}|${WORKFLOW}|${JOB}|${STATUS}|${SHA:0:8}"
          STACK_HASH=$(printf "%s" "$BASE" | shasum -a 256 | awk '{print $1}')
          curl --location "$FLUENT_BIT_URL" \
            --header 'Content-Type: application/json' \
            --header "Authorization: Basic $FLUENT_BIT_AUTH_BA" \
            --data "{
              \"service\": \"github-actions\",
              \"repo\": \"${REPO}\",
              \"workflow\": \"${WORKFLOW}\",
              \"job\": \"${JOB}\",
              \"status\": \"${STATUS}\",
              \"branch\": \"${BRANCH}\",
              \"autor\": \"${GITHUB_ACTOR}\",
              \"git_sha\": \"${SHA}\",
              \"run_id\": \"${RUN_ID}\",
              \"mensagem_curta\": \"Execução ${STATUS} em ${WORKFLOW}/${JOB}\",
              \"tipo_erro\": \"${TIPO_ERRO}\",
              \"stack_hash\": \"${STACK_HASH}\",
              \"timestamp\": \"${TS}\"
            }"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Autenticar no GCP (SA de deploy)
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Habilitar API Cloud Run (idempotente)
        run: gcloud --quiet --project "${{ secrets.GCP_PROJECT_ID }}" services enable run.googleapis.com

      - name: Deploy no Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service: ${{ secrets.CLOUD_RUN_SERVICE }}               # ex: log-agent-backend
          image: docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/log-agent-backend:latest
          region: ${{ secrets.CLOUD_RUN_REGION }}                 # ex: us-central1
          env_vars: |
            GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}
            FIRESTORE_DATABASE_ID=agent-ia-active
            TTL_DAYS=14
          flags: >-
            --allow-unauthenticated
            --service-account=${{ secrets.CLOUD_RUN_RUNTIME_SA }}
            --verbosity=debug

      - name: URL do serviço
        run: |
          gcloud run services describe "${{ secrets.CLOUD_RUN_SERVICE }}" \
            --region "${{ secrets.CLOUD_RUN_REGION }}" \
            --project "${{ secrets.GCP_PROJECT_ID }}" \
            --format='value(status.url)'

      - name: Enviar logs (deploy) para Fluent Bit
        if: always()
        env:
          FLUENT_BIT_URL: ${{ secrets.FLUENT_BIT_URL }}
          FLUENT_BIT_AUTH_BA: ${{ secrets.FLUENT_BIT_AUTH_BA }}
        run: |
          REPO="${GITHUB_REPOSITORY}"
          WORKFLOW="${GITHUB_WORKFLOW}"
          JOB="${GITHUB_JOB}"
          BRANCH="${GITHUB_REF_NAME}"
          SHA="${GITHUB_SHA}"
          RUN_ID="${GITHUB_RUN_ID}"
          STATUS="${{ job.status }}"
          TS="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          TIPO_ERRO=$( [ "$STATUS" = "failure" ] && echo "DEPLOY" || echo "INFO" )
          BASE="${REPO}|${WORKFLOW}|${JOB}|${STATUS}|${SHA:0:8}"
          STACK_HASH=$(printf "%s" "$BASE" | shasum -a 256 | awk '{print $1}')
          curl --location "$FLUENT_BIT_URL" \
            --header 'Content-Type: application/json' \
            --header "Authorization: Basic $FLUENT_BIT_AUTH_BA" \
            --data "{
              \"service\": \"github-actions\",
              \"repo\": \"${REPO}\",
              \"workflow\": \"${WORKFLOW}\",
              \"job\": \"${JOB}\",
              \"status\": \"${STATUS}\",
              \"branch\": \"${BRANCH}\",
              \"autor\": \"${GITHUB_ACTOR}\",
              \"git_sha\": \"${SHA}\",
              \"run_id\": \"${RUN_ID}\",
              \"mensagem_curta\": \"Execução ${STATUS} em ${WORKFLOW}/${JOB}\",
              \"tipo_erro\": \"${TIPO_ERRO}\",
              \"stack_hash\": \"${STACK_HASH}\",
              \"timestamp\": \"${TS}\"
            }"
