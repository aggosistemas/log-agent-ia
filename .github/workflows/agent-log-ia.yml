name: Build, Teste e Deploy no Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: log-agent-backend
  DOCKER_HUB_REPO: ${{ secrets.DOCKER_HUB_USERNAME }}/log-agent-backend

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Instalar dependências
        run: |
          pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Rodar testes com pytest
        env:
          OPENAI_API_KEY: dummy-key
        run: |
          PYTHONPATH=src pytest src/test/ --disable-warnings -v

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build da imagem Docker
        run: |
          docker build --no-cache -t $DOCKER_HUB_REPO:latest .

      - name: Push da imagem para o Docker Hub
        run: |
          docker push $DOCKER_HUB_REPO:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Autenticar no GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy no Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ secrets.CLOUD_RUN_SERVICE }}
          image: docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/log-agent-backend:latest
          region: ${{ secrets.CLOUD_RUN_REGION }}
          env_vars: |
            GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}

      - name: Enviar log da pipeline para API IA
        if: always()
        run: |
          curl -X POST https://log-agent-backend-641937239209.us-central1.run.app/logs \
            -H "Content-Type: application/json" \
            -d '{
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
              "nivel": "${{ job.status }}",
              "mensagem": "Deploy via GitHub Actions: ${{ job.status }}",
              "servico": "pipeline-cloudrun"
            }'
